# This was going to be a script that only executed what I needed for my deployment purposes... cutting out all the SEO stuff, docket image stuff, release notes, etc.
# Honestly it was just supposed to update image paths... but I figured out how to do that via utils.js, so this is not useful now.
# But, if one day something like this is needed, here it is.
name: Update Image Paths and Deploy to GitHub Pages

on:
  workflow_dispatch:  # Manual trigger

# Permissions setup for deploying to GitHub Pages
permissions:
  contents: read      # Read-only access to repository content
  pages: write        # Write access to GitHub Pages
  id-token: write     # Needed for deployment authentication

concurrency:
  group: "pages-update-imgs"
  cancel-in-progress: true

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout Repository
        uses: actions/checkout

      # Step 2: Modify image paths with set-img-root.sh
      - name: Set Image Root Path
        run: |
          bash ./.github/set-img-root.sh ${{ github.repository_owner }}

      # Step 3: Build any necessary files (optional, adjust if your setup requires it)
      # If you have a static site generator (like Jekyll), add a build command here
      - name: Optional Build Step (Skip if not needed)
        run: |
          # Example build command, if applicable (uncomment if necessary)
          # bundle install && bundle exec jekyll build

      # Step 4: Prepare for GitHub Pages deployment
      - name: Setup GitHub Pages
        uses: actions/configure-pages

      # Step 5: Upload the modified site as an artifact for deployment
      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact
        with:
          path: '.'  # Path to the root of the project or your built site directory

      # Step 6: Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages
        with:
          timeout: 600000  # 10-minute timeout for the deployment
